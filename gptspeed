#!/bin/bash

####################################################################
# THIS SCRIPT WAS GENERATED BY OPENAI CHATGPT
#
# IT DOES NOT WORK !
####################################################################



# Test internet speed by downloading a file from a remote server
# and measuring the download time.

# Set the URL of the file to download.
url="https://proof.ovh.net/files/100Mb.dat"

# Set the desired output file name.
output="test.dat"

# Set the number of times to perform the download.
iterations=5

# Set the maximum allowed time for a single download in seconds.
timeout=5

# Set the minimum size of the file to download in bytes.
min_size=1024

# Initialize total download time and total data downloaded to 0.
total_time=0
total_data=0

# Perform the download test multiple times.
for i in $(seq 1 $iterations); do
  # Download the file using wget.
  output=$(wget -qO- --timeout=$timeout $url 2>&1)

  # Check if the download was successful.
  if [[ $? -ne 0 ]]; then
    # Print an error message and exit if the download failed.
    echo "Error: Failed to download file"
    exit 1
  fi

  # Parse the download time and size from the output of wget.
  time=$(echo "$output" | grep -oP '(?<=\().*(?=\))' | awk '{print $2}')
  size=$(echo "$output" | grep -oP '(?<=\().*(?=\))' | awk '{print $3}')

  # Check if the download size is less than the minimum size.
  if [[ $size -lt $min_size ]]; then
    # Print an error message and exit if the download size is too small.
    echo "Error: Downloaded file is too small"
    exit 1
  fi

  # Convert the download time to seconds and add it to the total time.
  time_sec=$(echo "$time" | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')
  total_time=$(awk "BEGIN {print $total_time + $time_sec}")

  # Add the size of the downloaded file to the total data.
  total_data=$(awk "BEGIN {print $total_data + $size}")
done

# Calculate the average download time and speed.
avg_time=$(awk "BEGIN {print $total_time / $iterations}")
avg_speed=$(awk "BEGIN {print $total_data / $avg_time / 1024 / 1024}")

# Print the results.
echo "Average download time: $avg_time seconds"
echo "Average download speed: $avg_speed Mbps"
